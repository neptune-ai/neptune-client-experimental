[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "default-unprefixed"

[tool.poetry.dependencies]
python = "^3.7"

# Base neptune package
neptune = "^1.8.2"

# For 3.7 compatibility
typing_extensions = ">=4.0.0"


[tool.poetry]
authors = ["neptune.ai <contact@neptune.ai>"]
description = "Neptune Client Experimental"
repository = "https://github.com/neptune-ai/neptune-client-experimental"
homepage = "https://neptune.ai/"
documentation = "https://docs.neptune.ai/"
include = ["CHANGELOG.md"]
license = "Apache License 2.0"
name = "neptune-experimental"
readme = "README.md"
version = "0.0.1"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "MLOps",
    "ML Experiment Tracking",
    "ML Model Registry",
    "ML Model Store",
    "ML Metadata Store",
]
packages = [
    { include = "neptune_experimental", from = "src" },
]

[tool.poetry.plugins."neptune.extensions"]
"experimental_remote_signals" = "neptune_experimental.remote_signals:initialize"
"experimental_async_operation_processor" = "neptune_experimental.custom_async_operation_processor:initialize"

[tool.poetry.urls]
"Tracker" = "https://github.com/neptune-ai/neptune-client-experimental/issues"
"Documentation" = "https://docs.neptune.ai/"

[tool.black]
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
force_grid_wrap = 2

[tool.flake8]
max-line-length = 120
extend-ignore = "E203"

[tool.mypy]
files = 'src/neptune_experimental'
mypy_path = "stubs"
install_types = "True"
non_interactive = "True"
disallow_untyped_defs = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
show_error_codes = "True"
warn_unused_ignores = "True"
ignore_missing_imports = "True"
